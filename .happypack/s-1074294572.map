{"version":3,"sources":["server/middleware/reactApplication/ServerHTML.js"],"names":["React","Children","PropTypes","serialize","getConfig","onlyIf","removeNil","getClientBundleEntryAssets","HTML","ClientConfigScript","KeyedComponent","children","only","clientEntryAssets","stylesheetTag","stylesheetFilePath","scriptTag","jsFilePath","ServerHTML","props","reactAppString","nonce","helmet","asyncComponents","inlineScript","body","__html","headerElements","meta","toComponent","link","css","style","bodyElements","STATE_IDENTIFIER","state","process","env","NODE_ENV","Date","now","js","script","map","x","idx","propTypes","string","object","shape","isRequired"],"mappings":"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","file":"ServerHTML.js","sourceRoot":"/Users/Adam/Dev/listman","sourcesContent":["/**\n * This module is responsible for generating the HTML page response for\n * the react application middleware.\n */\n\n/* eslint-disable react/no-danger */\n/* eslint-disable react/no-array-index-key */\n\nimport React, { Children, PropTypes } from 'react';\nimport serialize from 'serialize-javascript';\n\nimport getConfig from '../../../config/get';\nimport onlyIf from '../../../shared/utils/logic/onlyIf';\nimport removeNil from '../../../shared/utils/arrays/removeNil';\nimport getClientBundleEntryAssets from './getClientBundleEntryAssets';\n\nimport HTML from '../../../shared/components/HTML';\nimport ClientConfigScript from '../../../config/ClientConfigScript';\n\n\n// PRIVATES\n\nfunction KeyedComponent({ children }) {\n  return Children.only(children);\n}\n\n// Resolve the assets (js/css) for the client bundle's entry chunk.\nconst clientEntryAssets = getClientBundleEntryAssets();\n\nfunction stylesheetTag(stylesheetFilePath) {\n  return (\n    <link\n      href={stylesheetFilePath}\n      media=\"screen, projection\"\n      rel=\"stylesheet\"\n      type=\"text/css\"\n    />\n  );\n}\n\nfunction scriptTag(jsFilePath) {\n  return <script type=\"text/javascript\" src={jsFilePath} />;\n}\n\n// COMPONENT\n\nfunction ServerHTML(props) {\n  const {\n    reactAppString,\n    nonce,\n    helmet,\n    asyncComponents,\n  } = props;\n\n  // Creates an inline script definition that is protected by the nonce.\n  const inlineScript = body => (\n    <script\n      nonce={nonce}\n      type=\"text/javascript\"\n      dangerouslySetInnerHTML={{ __html: body }}\n    />\n  );\n\n  const headerElements = removeNil([\n    ...onlyIf(helmet, () => helmet.meta.toComponent()),\n    ...onlyIf(helmet, () => helmet.link.toComponent()),\n    onlyIf(\n      clientEntryAssets && clientEntryAssets.css,\n      () => stylesheetTag(clientEntryAssets.css),\n    ),\n    ...onlyIf(helmet, () => helmet.style.toComponent()),\n  ]);\n\n  const bodyElements = removeNil([\n    // Binds the client configuration object to the window object so\n    // that we can safely expose some configuration values to the\n    // client bundle that gets executed in the browser.\n    <ClientConfigScript nonce={nonce} />,\n    // Bind our async components state so the client knows which ones\n    // to initialise so that the checksum matches the server response.\n    onlyIf(\n      asyncComponents,\n      () => inlineScript(\n        `window.${asyncComponents.STATE_IDENTIFIER}=${serialize(asyncComponents.state)};`,\n      ),\n    ),\n    // Enable the polyfill io script?\n    // This can't be configured within a react-helmet component as we\n    // may need the polyfill's before our client JS gets parsed.\n    onlyIf(\n      getConfig('polyfillIO.enabled'),\n      () => scriptTag(getConfig('polyfillIO.url')),\n    ),\n    // When we are in development mode our development server will\n    // generate a vendor DLL in order to dramatically reduce our\n    // compilation times.  Therefore we need to inject the path to the\n    // vendor dll bundle below.\n    onlyIf(\n      process.env.NODE_ENV === 'development'\n        && getConfig('bundles.client.devVendorDLL.enabled'),\n      () => scriptTag(\n        `${getConfig('bundles.client.webPath')}${getConfig('bundles.client.devVendorDLL.name')}.js?t=${Date.now()}`,\n      ),\n    ),\n    onlyIf(\n      clientEntryAssets && clientEntryAssets.js,\n      () => scriptTag(clientEntryAssets.js),\n    ),\n    ...onlyIf(\n      helmet,\n      () => helmet.script.toComponent(),\n    ),\n  ]);\n\n  return (\n    <HTML\n      title={getConfig('htmlPage.defaultTitle')}\n      description={getConfig('htmlPage.description')}\n      appBodyString={reactAppString}\n      headerElements={\n        headerElements.map((x, idx) => <KeyedComponent key={idx}>{x}</KeyedComponent>)\n      }\n      bodyElements={\n        bodyElements.map((x, idx) => <KeyedComponent key={idx}>{x}</KeyedComponent>)\n      }\n    />\n  );\n}\n\nServerHTML.propTypes = {\n  reactAppString: PropTypes.string,\n  nonce: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  helmet: PropTypes.object,\n  asyncComponents: PropTypes.shape({\n    state: PropTypes.object.isRequired,\n    STATE_IDENTIFIER: PropTypes.string.isRequired,\n  }),\n};\n\n// EXPORT\n\nexport default ServerHTML;\n"]}