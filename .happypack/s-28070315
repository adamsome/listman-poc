var _jsxFileName = "/Users/Adam/Dev/listman/shared/components/HTML/HTML.js";
/**
 * This is the HTML container that our React Application will be rendered in.
 * We keep it at this location to allow ourselves to make arbitrary changes
 * easily along with other changes to our app components.
 *
 * It's also useful to have a simple shared component like this that can be
 * shared by various parts of our system, for e.g. server side rendering
 * and/or a service worker offline page generator.
 */
/* eslint-disable react/no-danger */

import React, { PropTypes } from 'react';

function HTML(props) {
  const {
    title,
    description,
    appBodyString,
    headerElements,
    bodyElements
  } = props;

  return React.createElement(
    "html",
    { lang: "en", __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 24
      }
    },
    React.createElement(
      "head",
      {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 25
        }
      },
      React.createElement(
        "title",
        {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        title
      ),
      React.createElement("meta", { name: "application-name", content: title, __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 27
        }
      }),
      React.createElement("meta", { name: "description", content: description, __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 28
        }
      }),
      React.createElement("meta", { charSet: "utf-8", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 29
        }
      }),
      React.createElement("meta", { httpEquiv: "X-UA-Compatible", content: "IE=edge", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 30
        }
      }),
      React.createElement("meta", { name: "viewport", content: "width=device-width, initial-scale=1", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 31
        }
      }),
      React.createElement("meta", { name: "msapplication-TileColor", content: "#2b2b2b", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 32
        }
      }),
      React.createElement("meta", { name: "msapplication-TileImage", content: "/favicons/mstile-144x144.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 33
        }
      }),
      React.createElement("meta", { name: "theme-color", content: "#2b2b2b", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 34
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon-precomposed", sizes: "152x152", href: "/favicons/apple-touch-icon-152x152.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon-precomposed", sizes: "144x144", href: "/favicons/apple-touch-icon-144x144.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon-precomposed", sizes: "120x120", href: "/favicons/apple-touch-icon-120x120.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon-precomposed", sizes: "114x114", href: "/favicons/apple-touch-icon-114x114.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 46
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon-precomposed", sizes: "76x76", href: "/favicons/apple-touch-icon-76x76.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon-precomposed", sizes: "72x72", href: "/favicons/apple-touch-icon-72x72.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon-precomposed", sizes: "57x57", href: "/favicons/apple-touch-icon-57x57.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon-precomposed", sizes: "60x60", href: "/favicons/apple-touch-icon-60x60.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50
        }
      }),
      React.createElement("link", { rel: "apple-touch-icon", sizes: "180x180", href: "/favicons/apple-touch-icon-180x180.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51
        }
      }),
      React.createElement("link", { rel: "mask-icon", href: "/favicons/safari-pinned-tab.svg", color: "#00a9d9", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52
        }
      }),
      React.createElement("link", { rel: "icon", type: "image/png", href: "/favicons/favicon-196x196.png", sizes: "196x196", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 53
        }
      }),
      React.createElement("link", { rel: "icon", type: "image/png", href: "/favicons/favicon-128.png", sizes: "128x128", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54
        }
      }),
      React.createElement("link", { rel: "icon", type: "image/png", href: "/favicons/favicon-96x96.png", sizes: "96x96", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 55
        }
      }),
      React.createElement("link", { rel: "icon", type: "image/png", href: "/favicons/favicon-32x32.png", sizes: "32x32", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56
        }
      }),
      React.createElement("link", { rel: "icon", sizes: "16x16 32x32", href: "/favicon.ico", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57
        }
      }),
      React.createElement("meta", { name: "msapplication-TileColor", content: "#2b2b2b", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58
        }
      }),
      React.createElement("meta", { name: "msapplication-TileImage", content: "/favicons/mstile-144x144.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59
        }
      }),
      React.createElement("meta", { name: "msapplication-square70x70logo", content: "/favicons/mstile-70x70.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60
        }
      }),
      React.createElement("meta", { name: "msapplication-square150x150logo", content: "/favicons/mstile-150x150.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61
        }
      }),
      React.createElement("meta", { name: "msapplication-wide310x150logo", content: "/favicons/mstile-310x150.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 62
        }
      }),
      React.createElement("meta", { name: "msapplication-square310x310logo", content: "/favicons/mstile-310x310.png", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63
        }
      }),
      React.createElement("link", { rel: "manifest", href: "/manifest.json", __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 64
        }
      }),
      headerElements
    ),
    React.createElement(
      "body",
      {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 67
        }
      },
      React.createElement("div", { id: "app", dangerouslySetInnerHTML: { __html: appBodyString }, __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 68
        }
      }),
      bodyElements
    )
  );
}

HTML.propTypes = {
  title: PropTypes.string.isRequired,
  description: PropTypes.string.isRequired,
  appBodyString: PropTypes.string,
  headerElements: PropTypes.node,
  bodyElements: PropTypes.node
};

HTML.defaultProps = {
  appBodyString: '',
  headerElements: null,
  bodyElements: null
};

// EXPORT

export default HTML;