{"version":3,"sources":["client/registerServiceWorker.js"],"names":["getConfig","process","env","NODE_ENV","OfflinePluginRuntime","require","install","onUpdating","undefined","onUpdateReady","applyUpdate","onUpdated","window","location","reload","onUpdateFailed"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAP,MAAsB,eAAtB;;AAEA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C;AACA;AACA,MAAIH,UAAU,uBAAV,CAAJ,EAAwC;AAAA;AACtC,UAAMI,uBAAuBC,QAAQ,wBAAR,CAA7B;;AAEA;AACA;AACAD,2BAAqBE,OAArB,CAA6B;AAC3BC,oBAAY;AAAA,iBAAMC,SAAN;AAAA,SADe;AAE3B;AACAC,uBAAe;AAAA,iBAAML,qBAAqBM,WAArB,EAAN;AAAA,SAHY;AAI3B;AACA;AACA;AACAC,mBAAW;AAAA,iBAAMC,OAAOC,QAAP,CAAgBC,MAAhB,EAAN;AAAA,SAPgB;AAQ3BC,wBAAgB;AAAA,iBAAMP,SAAN;AAAA;AARW,OAA7B;AALsC;AAevC;AACF","file":"registerServiceWorker.js","sourceRoot":"/Users/Adam/Dev/listman","sourcesContent":["// We use the offline-plugin to generate a service worker.  See the webpack\n// config for more details.\n//\n// We need to ensure that the runtime is installed so that the generated\n// service worker is executed.\n//\n// We will only be doing this for production builds.\n\nimport getConfig from '../config/get';\n\nif (process.env.NODE_ENV !== 'development') {\n  // We check the shared config, ensuring that the service worker has been\n  // enabled.\n  if (getConfig('serviceWorker.enabled')) {\n    const OfflinePluginRuntime = require('offline-plugin/runtime');\n\n    // Install the offline plugin, which instantiates our service worker and app\n    // cache to support precaching of assets and offline support.\n    OfflinePluginRuntime.install({\n      onUpdating: () => undefined,\n      // When an update is ready we will tell the new SW to take control immediately.\n      onUpdateReady: () => OfflinePluginRuntime.applyUpdate(),\n      // After the new SW update has been applied we will reload the users page\n      // to ensure they are using the latest assets.\n      // This only gets run if there were updates available for our cached assets.\n      onUpdated: () => window.location.reload(),\n      onUpdateFailed: () => undefined,\n    });\n  }\n}\n"]}