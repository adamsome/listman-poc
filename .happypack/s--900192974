var _jsxFileName = '/Users/Adam/Dev/listman/client/index.js';
/* eslint-disable global-require */

import React from 'react';
import { render } from 'react-dom';
import { BrowserRouter } from 'react-router-dom';
import { withAsyncComponents } from 'react-async-component';

import ReactHotLoader from './components/ReactHotLoader';
import DemoApp from '../shared/components/DemoApp';

// Get the DOM Element that will host our React application.
var container = document.querySelector('#app');

function renderApp(TheApp) {
  var app = React.createElement(
    ReactHotLoader,
    {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 16
      }
    },
    React.createElement(
      BrowserRouter,
      {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 17
        }
      },
      React.createElement(TheApp, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 18
        }
      })
    )
  );

  // We use the react-async-component in order to support super easy code splitting
  // within our application.  It's important to use this helper
  // @see https://github.com/ctrlplusb/react-async-component
  withAsyncComponents(app).then(function (_ref) {
    var appWithAsyncComponents = _ref.appWithAsyncComponents;
    return render(appWithAsyncComponents, container);
  });
}

// Execute the first render of our app.
renderApp(DemoApp);

// This registers our service worker for asset caching and offline support.
// Keep this as the last item, just in case the code execution failed (thanks
// to react-boilerplate for that tip.)
require('./registerServiceWorker');

// The following is needed so that we can support hot reloading our application.
if (process.env.NODE_ENV === 'development' && module.hot) {
  // Accept changes to this file for hot reloading.
  module.hot.accept('./index.js');
  // Any changes to our App will cause a hotload re-render.
  module.hot.accept('../shared/components/DemoApp', function () {
    return renderApp(require('../shared/components/DemoApp').default);
  });
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(container, 'container', '/Users/Adam/Dev/listman/client/index.js');

  __REACT_HOT_LOADER__.register(renderApp, 'renderApp', '/Users/Adam/Dev/listman/client/index.js');
}();

;