{"version":3,"sources":["client/index.js"],"names":["React","render","BrowserRouter","withAsyncComponents","ReactHotLoader","DemoApp","container","document","querySelector","renderApp","TheApp","app","then","appWithAsyncComponents","require","process","env","NODE_ENV","module","hot","accept","default"],"mappings":";AAAA;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAEA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA;AACA,IAAMC,YAAYC,SAASC,aAAT,CAAuB,MAAvB,CAAlB;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,MAAMC,MACJ;AAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AADF,GADF;;AAQA;AACA;AACA;AACAR,sBAAoBQ,GAApB,EAAyBC,IAAzB,CAA8B;AAAA,QAAGC,sBAAH,QAAGA,sBAAH;AAAA,WAC5BZ,OAAOY,sBAAP,EAA+BP,SAA/B,CAD4B;AAAA,GAA9B;AAGD;;AAED;AACAG,UAAUJ,OAAV;;AAEA;AACA;AACA;AACAS,QAAQ,yBAAR;;AAEA;AACA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CC,OAAOC,GAArD,EAA0D;AACxD;AACAD,SAAOC,GAAP,CAAWC,MAAX,CAAkB,YAAlB;AACA;AACAF,SAAOC,GAAP,CAAWC,MAAX,CACE,8BADF,EAEE;AAAA,WAAMX,UAAUK,QAAQ,8BAAR,EAAwCO,OAAlD,CAAN;AAAA,GAFF;AAID;;;;;;;;gCApCKf,S;;gCAEGG,S","file":"index.js","sourceRoot":"/Users/Adam/Dev/listman","sourcesContent":["/* eslint-disable global-require */\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { withAsyncComponents } from 'react-async-component';\n\nimport ReactHotLoader from './components/ReactHotLoader';\nimport DemoApp from '../shared/components/DemoApp';\n\n// Get the DOM Element that will host our React application.\nconst container = document.querySelector('#app');\n\nfunction renderApp(TheApp) {\n  const app = (\n    <ReactHotLoader>\n      <BrowserRouter>\n        <TheApp />\n      </BrowserRouter>\n    </ReactHotLoader>\n  );\n\n  // We use the react-async-component in order to support super easy code splitting\n  // within our application.  It's important to use this helper\n  // @see https://github.com/ctrlplusb/react-async-component\n  withAsyncComponents(app).then(({ appWithAsyncComponents }) =>\n    render(appWithAsyncComponents, container),\n  );\n}\n\n// Execute the first render of our app.\nrenderApp(DemoApp);\n\n// This registers our service worker for asset caching and offline support.\n// Keep this as the last item, just in case the code execution failed (thanks\n// to react-boilerplate for that tip.)\nrequire('./registerServiceWorker');\n\n// The following is needed so that we can support hot reloading our application.\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  // Accept changes to this file for hot reloading.\n  module.hot.accept('./index.js');\n  // Any changes to our App will cause a hotload re-render.\n  module.hot.accept(\n    '../shared/components/DemoApp',\n    () => renderApp(require('../shared/components/DemoApp').default),\n  );\n}\n"]}