{"version":3,"sources":["server/middleware/errorHandlers.js"],"names":["errorHandlersMiddleware","notFoundMiddlware","req","res","next","status","send","unhandledErrorMiddleware","err","console","log","stack"],"mappings":"AAAA;AACA;;AAEA,MAAMA,0BAA0B;AAC9B;AACA;AACA;AACA;AACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C;AACzCD,MAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qCAArB;AACD,CAP6B;;AAS9B;AACA;AACA;AACA;AACA,SAASC,wBAAT,CAAkCC,GAAlC,EAAuCN,GAAvC,EAA4CC,GAA5C,EAAiDC,IAAjD,EAAuD;AACrD,MAAII,GAAJ,EAAS;AACPC,YAAQC,GAAR,CAAYF,GAAZ;AACAC,YAAQC,GAAR,CAAYF,IAAIG,KAAhB;AACD;AACDR,MAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sCAArB;AACD,CAnB6B,CAAhC;;AAsBA,eAAeN,uBAAf","file":"errorHandlers.js","sourceRoot":"/Users/Adam/Dev/listman","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n\nconst errorHandlersMiddleware = [\n  // Handle 404 errors.\n  // Note: the react application middleware hands 404 paths, but it is good to\n  // have this backup for paths not handled by the universal middleware. For\n  // example you may bind a /api path to express.\n  function notFoundMiddlware(req, res, next) {\n    res.status(404).send('Sorry, that resource was not found.');\n  },\n\n  // Handle all unhandled errors.\n  // Typically you want to return a \"500\" response status.\n  // Note: You must provide specify all 4 parameters on this callback function\n  // even if they aren't used, otherwise it won't be used.\n  function unhandledErrorMiddleware(err, req, res, next) {\n    if (err) {\n      console.log(err);\n      console.log(err.stack);\n    }\n    res.status(500).send('Sorry, an unexpected error occurred.');\n  },\n];\n\nexport default errorHandlersMiddleware;\n"]}