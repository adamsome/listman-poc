{"version":3,"sources":["config/ClientConfigScript.js"],"names":["React","serialize","filterWithRules","values","clientConfig","clientConfigFilter","serializedClientConfig","ClientConfigScript","nonce","props","type","dangerouslySetInnerHTML","__html","propTypes","PropTypes","string","defaultProps"],"mappings":";;;AAAA;;;;;;;;;;;AAWA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA;AACA;AACA,MAAMC,eAAeF;AACnB;AACAC,OAAOE,kBAFY;AAGnB;AACAF,MAJmB,CAArB;;AAOA,MAAMG,yBAAyBL,UAAUG,YAAV,CAA/B;;AAEA,SAASG,kBAAT,CAA4B,EAAEC,KAAF,EAA5B,EAAuC;AACrC,QAAMC,QAAQ;AACZC,UAAM,iBADM;AAEZF,SAFY;AAGZG,6BAAyB;AACvBC,cAAS,4BAA2BN,sBAAuB;AADpC;AAHb,GAAd;AAOA,MAAIE,KAAJ,EAAW;AACTC,UAAMD,KAAN,GAAcA,KAAd;AACD;AACD,SAAO,2CAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAEDF,mBAAmBM,SAAnB,GAA+B;AAC7BL,SAAOR,MAAMc,SAAN,CAAgBC;AADM,CAA/B;;AAIAR,mBAAmBS,YAAnB,GAAkC;AAChCR,SAAO;AADyB,CAAlC;;AAIA,eAAeD,kBAAf","file":"ClientConfigScript.js","sourceRoot":"/Users/Adam/Dev/listman","sourcesContent":["/**\n * A react component that generates a script tag that binds the allowed\n * values to the window for use within the browser.\n *\n * They get bound to window.__CLIENT_CONFIG__\n *\n * When you use the \"<projectroot>/config/get\" helper it automatically resolves\n * the config values for you from either the window or the local values.js\n * file.\n */\n\nimport React from 'react';\nimport serialize from 'serialize-javascript';\nimport filterWithRules from '../shared/utils/objects/filterWithRules';\nimport values from './values';\n\n// Filter the config down to the properties that are allowed to be included\n// in the HTML response.\nconst clientConfig = filterWithRules(\n  // These are the rules used to filter the config.\n  values.clientConfigFilter,\n  // The config values to filter.\n  values,\n);\n\nconst serializedClientConfig = serialize(clientConfig);\n\nfunction ClientConfigScript({ nonce }) {\n  const props = {\n    type: 'text/javascript',\n    nonce,\n    dangerouslySetInnerHTML: {\n      __html: `window.__CLIENT_CONFIG__=${serializedClientConfig}`,\n    },\n  };\n  if (nonce) {\n    props.nonce = nonce;\n  }\n  return <script {...props} />;\n}\n\nClientConfigScript.propTypes = {\n  nonce: React.PropTypes.string,\n};\n\nClientConfigScript.defaultProps = {\n  nonce: 'NONCE_PLACEHOLDER',\n};\n\nexport default ClientConfigScript;\n"]}